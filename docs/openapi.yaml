openapi: 3.0.2
info:
    title: Data Exchange Onboarding Server APIs
    version: 5.0.0
    description: >
        # Introduction
        
        The Onboarding is DXs' (Data Exchange)  portal.         
        
        # Configurations
        
        - **Server**: 
          - In the doc, we display the server url to be https://example-onboarding.com with the hostname as example-onboarding.com
          - This could be configured according to the deployment
        - **Base path**:
          - Base path is the path on which API is served, relative to the host
          - It is the initial part of the API
          - The base path for [DX AAA Server](https://github.com/datakaveri/iudx-aaa-server) is set to `/auth/v1`
          - Currently, `/iudx/cat/v1` is being used as base path for all the DX Onboarding Server APIs
          - These value could be configured according to the deployment
        - **Request Samples**:
          - The `<tokeValue>` in the header of request sample could be replaced with respective token value that could be obtained from DX Auth Server
          - The `<payload>` in the request sample could be replaced with the payload given adjacent to the request sample
          - The payload contains `<some_item_id>`, `<provider_id>`, `<some_item_name>`, for which the appropriate values could be added 
        
         # API HTTP Responses
        Apart from the response codes specified in each API,

        the API server may respond with certain 4xx and 5xx error codes which are related to common API
        Gateway behaviours.

        The application should address them accordingly.
    contact:
        name: For support contact IUDX Team at
        email: support@iudx.org.in
servers:
    -  url: 'https://example-onboarding.com/iudx/cat/v1/v1'
       description: Production Instance

paths:
    /item:
        description: >
            Operations on a specific catalogue entity. This endpoint is used to create/update/read/delete a
            catalogue DX Entity.
        get:
            tags:
                - Entity
            parameters:
                -
                    name: id
                    description: ID of the DX Entity
                    schema:
                        maxLength: 512
                        minLength: 0
                        type: string
                    in: query
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponseWithObjects'
                    description: Found the item.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponseForGetEntity'
                    description: Didn't find the item.
            operationId: get item
            description: Get an item given the id
            x-codeSamples:
                -
                    lang: cURL
                    label: 'item by id'
                    source: |
                        curl --location --request GET 'https://example-onboarding.com/iudx/cat/v1/v1/item?id=802c4c64-b303-4ee1-a68a-69eae944323e'
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/exampleEntityWId'
                required: true
            tags:
                - Entity
            parameters:
                -
                    name: token
                    description: DX Auth token to process the request
                    schema:
                        maxLength: 512
                        minLength: 0
                        pattern: '^[a-zA-Z0-9\/\@\.]*$'
                        type: string
                    in: header
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/updateItemResponse'
                    description: Success
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/updateItemBadRequest'
                    description: Bad Request
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponseWithObjects'
                            examples:
                                Unauthorized:
                                    value:
                                        type: 'urn:dx:cat:InvalidAuthorizationToken'
                                        title: Token is invalid
                                        detail: failed
                    description: Unauthorized access
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/updateItemNotFound'
                    description: Document doesn't exist to update it
            operationId: update item
            description: >
                Update an item where the body contains a fully valid item with id. Relationship links like

                provider, resourceGroup, resourceServer and "name" are not allowed to be updated. itemStatus
                is added by backend.

                Items maybe subClasses of type [IUDXEntity](https://voc.iudx.org.in/IUDXEntity). Depedning on
                this, some properties maybe mandatory.

                The json schema for the different types can be found
                [here](https://github.com/datakaveri/iudx-catalogue-server/tree/master/src/main/resources/iudx/catalogue/server/validator).
                In the future, we will serve schemas from our own servers.

                #### Non-updateable fields

                In case update of these fields is required, it is recommended to delete the item

                and re-upload it.

                1. iudx:Resource
                   - id
                   - provider
                   - resourceGroup
                   - name 
                   - type (1st element in array non-modifiable)
                   - itemStatus

                2. iudx:ResourceGroup
                   - id
                   - name
                   - provider
                   - resouceServer
                   - type (1st element in array non-modifiable)
                   - itemStatus
                
                3. iudx:ResourceServer
                   - id
                   - provider
                   - type (1st element in array non-modifiable)
                   - itemStatus
                
                4. iudx:Provider
                   - id
                   - type (1st element in array non-modifiable)
                   - itemStatus
            x-codeSamples:
                -
                    lang: cURL
                    label: 'update item'
                    source: |
                        curl --location --request PUT 'https://example-onboarding.com/iudx/cat/v1/v1/item/' \
                        --header 'token: <tokenValue>' \
                        --header 'Content-Type: application/json' \
                        --data-raw '<payload>'
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/exampleEntityWoID'
                required: true
            tags:
                - Entity
            parameters:
                -
                    name: token
                    description: DX Auth token to process the request
                    schema:
                        maxLength: 512
                        minLength: 0
                        pattern: '^[a-zA-Z0-9\/\@\.]*$'
                        type: string
                    in: header
                    required: true
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponseWithObjects'
                            examples:
                                Create Success:
                                    value:
                                        type: 'urn:dx:cat:Success'
                                        results:
                                            -
                                                id: >
                                                    802c4c64-b303-4ee1-a68a-69eae944323e
                                                method: create
                                                title: 'urn:dx:cat:Success'
                    description: Successfully inserted
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponseWithObjects'
                            examples:
                                Schema Validation Failure:
                                    value:
                                      {
                                          "type": "urn:dx:cat:InvalidSchema",
                                          "title": "Invalid Schema",
                                      }
                                Link Validation Failure:
                                    value:
                                        type: 'urn:dx:cat:LinkValidationFailed'
                                        title: Link Validation Failed
                    description: Invalid document
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponseWithObjects'
                            examples:
                                Unauthorized:
                                    value:
                                        type: 'urn:dx:cat:InvalidAuthorizationToken'
                                        title: Token is invalid
                                        detail: failed
                    description: Unauthorized access
            operationId: create item
            description: >
                Insert an item into the catalogue where the item's body specifies the type of item and
                instance name. id and itemStatus are added by server. Items maybe subClasses of type
                [IUDXEntity](https://voc.iudx.org.in/IUDXEntity). Depedning on this, some properties maybe
                mandatory. The json schema for the different types can be found
                [here](https://github.com/datakaveri/iudx-catalogue-server/tree/master/src/main/resources/iudx/catalogue/server/validator).
                In the future, we will serve schemas from our own servers.
            x-codeSamples:
                -
                    lang: cURL
                    label: 'create item'
                    source: |
                        curl --location --request POST 'https://example-onboarding.com/iudx/cat/v1/v1/item/' \
                        --header 'token: <tokenValue>' \
                        --header 'Content-Type: application/json' \
                        --data-raw '<payload>'
        delete:
            tags:
                - Entity
            parameters:
                -
                    name: id
                    description: ID of the DX Entity
                    schema:
                        maxLength: 512
                        minLength: 0
                        type: string
                    in: query
                    required: true
                -
                    name: token
                    description: DX Auth token to process the request
                    schema:
                        maxLength: 512
                        minLength: 0
                        pattern: '^[a-zA-Z0-9\/\@\.]*$'
                        type: string
                    in: header
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponseWithObjects'
                            examples:
                                Delete Success:
                                    value:
                                      {
                                          "type": "urn:dx:cat:Success",
                                          "title": "Success",
                                          "results": [
                                              {
                                                  "id": "802c4c64-b303-4ee1-a68a-69eae944323e",
                                                  "method": "delete",
                                                  "title": "urn:dx:cat:Success"
                                              }
                                          ]
                                      }
                    description: Successfully deleted
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/unAuthorizedAccess'
                    description: Unauthorized access
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponseWithObjects'
                    description: Didn't find the item
            operationId: delete item
            description: Delete an item
            x-codeSamples:
                -
                    lang: cURL
                    label: 'delete item'
                    source: |
                        curl --location --request DELETE 'https://example-onboarding.com/iudx/cat/v1/v1/item?id=802c4c64-b303-4ee1-a68a-69eae944323e' \
                        --header 'token: <tokenValue>'



    /internal/ui/instance:
        servers:
            - url: 'https://example-onboarding.com/'
              description: Production Instance

        description: >
            A catalogue administrator API to set a middle layer instance, which will be reflected on the catalogue UI.
            **Instance APIs** : Instance refers to the name of the city/location. 
                            Instance API creates, updates, deletes and lists the name, icon, cover and logo of each instance.
        post:
            tags:
                - Mlayer Instance
            parameters:
                -
                    name: token
                    description: A valid DX Authorization token
                    schema:
                        maxLength: 512
                        minLength: 0
                        pattern: '^[a-zA-Z0-9\/\@\.]*$'
                        type: string
                    in: header
                    required: true
            requestBody:
                description: Create a new Instance using name, cover, icon, logo.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/exampleInstance'
                required: true
            operationId: create instance
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponseForCreatingInstance'
                    description: Success
                '400':

                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponseForCreatingInstance'
                    description: Bad Request
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/unAuthorizedAccess'
                    description: Unauthorized access

            x-codeSamples:
                -
                    lang: cURL
                    label: 'create instance'
                    source: |
                        curl --location --request POST 'https://example-onboarding.com/iudx/cat/v1/v1/instance' \
                        --header 'token: <tokenValue>' \
                        --header 'Content-Type: application/json' \
                        --data-raw '<payload>'

        put:
            tags:
                - Mlayer Instance
            parameters:
                - name: id
                  description: |
                      `id` of the instance to be updated
                  schema:
                      type: string
                  in: query
                  required: true

                - name: token
                  description: Authorization token
                  schema:
                      maxLength: 512
                      minLength: 0
                      pattern: '^[a-zA-Z0-9\/\@\.]*$'
                      type: string
                  in: header
                  required: true


            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/exampleInstance'
                required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponseForUpdatingInstance'
                    description: Success
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponseForCreatingInstance'
                    description: Bad Request
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/unAuthorizedAccess'
                    description: Unauthorized access
            operationId: update instance
            description: Update the instance of the middle layer
            x-codeSamples:
                - lang: cURL
                  label: 'update instance'
                  source: |
                      curl --location --request PUT 'https://example-onboarding.com/iudx/cat/v1/v1/instance?id=191e35e3-99c2-43a5-ba8d-811a756b08de' \
                      --header 'token: <tokenValue>' \
                      --header 'Content-Type: application/json' \
                      --data-raw '<payload>'

        get:
            tags:
                - Mlayer Instance
            parameters:
                - name: id
                  description: |
                      `id` of the instance to be fetched
                  schema:
                      type: string
                  in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponseForGettingInstance'
                    description: Success
            operationId: get instance
            description: >
                Get list of all Instances
            x-codeSamples:
                - lang: cURL
                  label: 'get instance'
                  source: |
                      curl --location --request GET 'https://example-onboarding.com/iudx/cat/v1/v1/instance'

        delete:
            tags:
                - Mlayer Instance
            parameters:
                - name: id
                  description: |
                      `id` of the Instance to be deleted.
                  schema:
                      type: string
                  in: query
                  required: true
                - name: token
                  description: Authorization token
                  schema:
                      maxLength: 512
                      minLength: 0
                      pattern: '^[a-zA-Z0-9\/\@\.]*$'
                      type: string
                  in: header
                  required: true
            operationId: delete instance
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponseForDeletingInstance'
                    description: Success
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/unAuthorizedAccess'
                    description: Unauthorized access
            description: delete an instance using id parameter
            x-codeSamples:
                - lang: cURL
                  label: 'delete instance'
                  source: |
                      curl --location --request DELETE 'https://example-onboarding.com/iudx/cat/v1/v1/instance?id=191e35e3-99c2-43a5-ba8d-811a756b08de' \
                      --header 'token: <tokenValue>'


    /internal/ui/domain:
        description: >
            A catalogue administrator API to set a middle layer domain, which will be reflected on the catalogue UI.
        post:
            tags:
                - Mlayer Domain
            parameters:
                - name: token
                  description: A valid DX Authorization token
                  schema:
                      maxLength: 512
                      minLength: 0
                      pattern: '^[a-zA-Z0-9\/\@\.]*$'
                      type: string
                  in: header
                  required: true
            requestBody:
                description: Create a new domain using name, label, icon, description.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/exampleDomain'
                required: true
            operationId: create domain
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponseForCreatingDomain'
                    description: Successfully inserted
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponseForCreatingInstance'
                    description: Invalid document
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/unAuthorizedAccess'
                    description: Unauthorized access
            description: >
                Create a new Data model Domain
            x-codeSamples:
                - lang: cURL
                  label: 'create domain'
                  source: |
                      curl --location --request POST 'https://example-onboarding.com/iudx/cat/v1/v1/domain' \
                      --header 'token: <tokenValue>' \
                      --header 'Content-Type: application/json' \
                      --data-raw '<payload>'

        put:
            tags:
                - Mlayer Domain
            parameters:
                - name: id
                  description: |
                      `id` of the data model domain, to be updated
                  schema:
                      type: string
                  in: query
                  required: true

                - name: token
                  description: Authorization token
                  schema:
                      maxLength: 512
                      minLength: 0
                      pattern: '^[a-zA-Z0-9\/\@\.]*$'
                      type: string
                  in: header
                  required: true
            operationId: update domain


            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/exampleDomain'
                required: true
                description: name, label, icon and description can be updated.

            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponseForUpdatingDomain'
                    description: Successfully inserted
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponseForCreatingInstance'
                    description: Invalid document
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/unAuthorizedAccess'
                    description: Unauthorized access
            description: Update the data model domain of the middle layer
            x-codeSamples:
                - lang: cURL
                  label: 'update domain'
                  source: |
                      curl --location --request PUT 'https://example-onboarding.com/iudx/cat/v1/v1/domain?id=3d73067f-2855-4155-b918-14d621b7a576' \
                      --header 'token: <tokenValue>' \
                      --header 'Content-Type: application/json' \
                      --data-raw '<payload>'

        get:
            tags:
                - Mlayer Domain
            parameters:
                - name: id
                  description: |
                      `id` of the data model domain, to be fetched
                  schema:
                      type: string
                  in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponseForGettingDomain'
                    description: Success
            operationId: get domain
            description: >
                Get list of all Data-model Domains.
            x-codeSamples:
                - lang: cURL
                  label: 'get domain'
                  source: |
                      curl --location --request GET 'https://example-onboarding.com/iudx/cat/v1/v1/domain'

        delete:
            tags:
                - Mlayer Domain
            parameters:
                - name: id
                  description: |
                      `id` of the Domain to be deleted.
                  schema:
                      type: string
                  in: query
                  required: true
                - name: token
                  description: Authorization token
                  schema:
                      maxLength: 512
                      minLength: 0
                      pattern: '^[a-zA-Z0-9\/\@\.]*$'
                      type: string
                  in: header
                  required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/successResponseForDeletingDomain'
                    description: Success
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/unAuthorizedAccess'
                    description: Unauthorized access
            description: delete a data model domain
            operationId: delete domain
            x-codeSamples:
                - lang: cURL
                  label: 'delete domain'
                  source: |
                      curl --location --request DELETE 'https://example-onboarding.com/iudx/cat/v1/v1/domain?id=3d73067f-2855-4155-b918-14d621b7a576' \
                      --header 'token: <tokenValue>'                 

components:
    schemas:
        exampleEntityWoID:
            title: Root Type for exampleEntityWoID
            description: An example entity without ID (For first time onboarding)
            type: object
            properties:
                '@context':
                    description: 'JSON-LD context. Default is https://voc.iudx.org.in.'
                    type: string
                name:
                    type: string
                type:
                    description: >
                        JSON-LD type. Must contain the uri of one of the
                        [IUDXEntity](https://voc.iudx.org.in/IUDXEntity) subclasses. May additionally contain
                        a data model uri which can be found [here](https://voc.iudx.org.in/) in the
                        "Data-Models" tab.
                    type: array
                    items:
                        type: string
            example:
              {
                  "@context": "https://voc.iudx.org.in/",
                  "type": [
                      "iudx:Resource",
                      "iudx:EnvAQM"
                  ],
                  "id": "<some_item_id>",
                  "description": "Description for pune Point of interest",
                  "tags": [
                      "environment",
                      " air quality",
                      " climate",
                      " noise",
                      " light",
                      " uv"
                  ],
                  "provider": "<some_provider_id>",
                  "itemStatus": "ACTIVE",
                  "deviceId": "b3ec32ff-fa7d-64fa-c0af-272e25d314e9",
                  "resourceGroup": "<some_provider_id>/rs.iudx.io/pune-point-of-interests",
                  "location": {
                      "type": "Place",
                      "address": "ABD area, Pune",
                      "geometry": {
                          "coordinates": [
                              73.874537,
                              18.528311
                          ],
                          "type": "Point"
                      }
                  },
                  "deviceModel": {
                      "brandName": "Climo",
                      "modelName": "Bosch-Climo",
                      "modelURL": "http://boschclimo.com"
                  },
                  "name": "<some_item_name>"
              }
        exampleEntityWId:
            title: payload for update item with ID
            description: payload for update item with ID
            required:
                - type
                - name
                - id
                - tags
                - provider
                - resourceGroup
            type: object
            properties:
                '@context':
                    type: string
                type:
                    type: array
                    items:
                        type: string
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                tags:
                    type: array
                    items:
                        type: string
                provider:
                    type: string
                itemStatus:
                    type: string
                deviceId:
                    type: string
                resourceGroup:
                    type: string
                location:
                    type: array
                    items:
                        type: string
                deviceModel:
                    type: array
                    items:
                        type: string
            example:
              {
                  "@context": "https://voc.iudx.org.in/",
                  "type": [
                      "iudx:Resource",
                      "iudx:EnvAQM"
                  ],
                  "id": "<some_item_id>",
                  "name": "<some_item_name>",
                  "description": "Description for Bosch-Climo AQM resource 28",
                  "tags": [
                      "New Tag, aqm,flood.test"
                  ],
                  "provider": "<some_provider_id>",
                  "itemStatus": "ACTIVE",
                  "deviceId": "b3ec32ff-fa7d-64fa-c0af-272e25d314e9",
                  "resourceGroup": "<some_provider_id>/rs.iudx.io/pune-point-of-interests",
                  "location": {
                      "type": "Place",
                      "address": "ABD area, Pune",
                      "geometry": {
                          "coordinates": [
                              73.874537,
                              18.528311
                          ],
                          "type": "Point"
                      }
                  },
                  "deviceModel": {
                      "brandName": "Climo",
                      "modelName": "Bosch-Climo",
                      "modelURL": "http://boschclimo.com"
                  }
              }
        successResponseWithObjects:
            title: Root Type for standardResponse
            description: Standard Response for all requests
            required:
                - type
            type: object
            properties:
                totalHits:
                    format: int32
                    description: Total number of documents which matched the query.
                    type: integer
                results:
                    description: Results which matched the query. This is an array of objects.
                    type: array
                    items:
                        type: object
                detail:
                    description: Detailed description of the type or response
                    type: string
                type:
                    description: >
                        URN type of the response indicating if the query was successful or if any errors have
                        been triggered.
                    type: string
                title:
                    description: A human readable title to the message response.
            example:
                totalHits: 10
                results:
                    - {}
                type: 'urn:dx:cat:Success'
                title: Success
        errorResponseForGetEntity:
            title: Root Type for standardResponse
            description: Standard Response for all requests
            required:
                - type
            type: object
            properties:
                type:
                    description: >
                        Type of the response indicating if the query was successful or if any errors have been
                        triggered.
                    type: string
                title:
                    description: A human readable title to the message response.
                totalHits:
                    format: int32
                    description: Total number of documents which matched the query.
                    type: integer
                results:
                    description: Results which matched the query. This is an array of objects.
                    type: array
                    items:
                        type: object
            example:
                type: urn:dx:cat:ItemNotFound
                title: error
                totalHits: 0
                results: [ ]
        updateItemResponse:
            title: Response for update Item
            description: Success response for update Item with ID
            required:
                - type
            type: object
            properties:
                type:
                    description: >
                        URN type of the response indicating if the query was successful or if any errors have
                        been triggered
                    type: string
                title:
                    description: A human readable title to the message response
                results:
                    description: Results which matched the query. This is an array of objects.
                    type: array
                    items:
                        type: object
            example:
                type: urn:dx:cat:Success
                title: urn:dx:cat:Success
                results:
                    - id: 802c4c64-b303-4ee1-a68a-69eae944323e
                      method: update
                      title: urn:dx:cat:Success
        updateItemBadRequest:
            title: 400 Bad Request
            description: Update Item Bad Request
            required:
                - type
            type: string
            properties:
                type:
                    description: >
                        Type of the response indicating if the query was successful or if any errors have been
                        triggered.
                    type: string
                title:
                    description: A human readable title to the message response.
                detail:
                    description: Detailed description of the type or response
                    type: string
                results:
                    description: Results which matched the query. This is an array of objects.
                    type: array
                    items:
                        type: object
            example:
                type: urn:dx:cat:InvalidSchema
                title: Invalid Schema
                detail: Invalid Schema
                results: [ ]
        errorResponseWithObjects:
            title: Root Type for standardResponse
            description: Standard Response for all requests
            required:
                - type
            type: object
            properties:
                totalHits:
                    format: int32
                    description: Total number of documents which matched the query.
                    type: integer
                results:
                    description: Results which matched the query. This is an array of objects.
                    type: array
                    items:
                        type: object
                detail:
                    description: Detailed description of the type or response
                    type: string
                type:
                    description: >
                        Type of the response indicating if the query was successful or if any errors have been
                        triggered.
                    type: string
                title:
                    description: A human readable title to the message response.
            example:
                totalHits: 10
                results:
                    - { }
                type: <error urn>
                title: <error title
                detail: <error detail description>
        updateItemNotFound:
            title: 404 Not Found
            description: Update Item Not Found
            required:
                - type
            type: string
            properties:
                type:
                    description: >
                        Type of the response indicating if the query was successful or if any errors have been
                        triggered
                    type: string
                title:
                    description: A human readable title to the message response
                results:
                    description: Results which matched the query. This is an array of objects.
                    type: array
                    items:
                        type: object
            example:
                type: urn:dx:cat:ItemNotFound
                title: Item is not found
                results:
                    - id: 802c4c64-b303-4ee1-a68a-69eae944323e
                      method: update
                      title: failed
                      detail: 'Fail: Doc doesn''t exist, can''t update'
        unAuthorizedAccess:
            title: Common to unauthorized access response
            description: Response for 401 invalid token
            required:
                - type
            type: object
            properties:
                type:
                    description: >
                        Indicates that the token sent in request header is invalid
                    type: string
                title:
                    description: A human readable title to the message response
                detail:
                    description: Detailed description of the type or response
                    type: string
            example:
                type: urn:dx:cat:InvalidAuthorizationToken
                title: Token is invalid
                detail: Authorization failed, Invalid token.
        exampleInstance:
            title: Root Type for exampleInstance
            description: An example instance object of middle layer.
            type: object
            properties:
                name:
                    type: string
                    description: name of the instance
                cover:
                    type: string
                    description: URL of the image
                icon:
                    type: string
                    description: URL of the image
                logo:
                    type: string
                    description: URL of the image
            example:
                name: lucknow
                cover: 'https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/covers/lucknow.jpg'
                icon: 'https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/icons/lucknow.jpg'
                logo: 'https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/logo/lucknow.jpg'
        successResponseForCreatingInstance:
            title: Response for creating an instance
            description: Example success response for creating the given instance
            required:
                - type
            type: object
            properties:
                type:
                    description: |
                        URN type of the response indicating if the query was successful or if any errors have
                        been triggered.
                    type: string
                title:
                    description: A human readable title to the message response.
                results:
                    description: Results which matched the query. This is an array of objects.
                    type: array
                    items:
                        type: object
            example:
                type: urn:dx:cat:Success
                title: Success
                results:
                    - id: 191e35e3-99c2-43a5-ba8d-811a756b08de
                      detail: Instance created Successfully
        successResponseForUpdatingInstance:
            title: Response for updating an instance
            description: Example success response for updating the given instance
            required:
                - type
            type: object
            properties:
                type:
                    description: |
                        URN type of the response indicating if the query was successful or if any errors have
                        been triggered.
                    type: string
                title:
                    description: A human readable title to the message response.
                results:
                    description: Results which matched the query. This is an array of objects.
                    type: array
                    items:
                        type: object
            example:
                type: urn:dx:cat:Success
                title: Success
                results:
                    - id: 191e35e3-99c2-43a5-ba8d-811a756b08de
                      detail: Instance Updated Successfully
        successResponseForGettingInstance:
            title: Response for getting an instance
            description: Example success response for getting instance
            required:
                - type
            type: object
            properties:
                type:
                    description: |
                        URN type of the response indicating if the query was successful or if any errors have
                        been triggered.
                    type: string
                title:
                    description: A human readable title to the message response.
                totalHits:
                    format: int32
                    description: Total number of documents which matched the query.
                    type: integer
                results:
                    description: Results which matched the query. This is an array of objects.
                    type: array
                    items:
                        type: object
            example:
                type: urn:dx:cat:Success
                title: Success
                totalHits: 1
                results:
                    - cover: https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/covers/lucknow.jpeg
                      instanceId: 191e35e3-99c2-43a5-ba8d-811a756b08de
                      name: lucknow
                      icon: https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/icons/lucknow.jpeg
                      logo: https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/logo/lucknow.jpeg
        successResponseForDeletingInstance:
            title: Response for deleting an instance
            description: Example success response for deleting instance
            required:
                - type
            type: object
            properties:
                type:
                    description: |
                        URN type of the response indicating if the query was successful or if any errors have
                        been triggered.
                    type: string
                title:
                    description: A human readable title to the message response.
                results:
                    description: Results which matched the query. This is an array of objects.
                    type: array
                    items:
                        type: object
            example:
                type: urn:dx:cat:Success
                title: Success
                results:
                    - id: 191e35e3-99c2-43a5-ba8d-811a756b08de
                      detail: Instance deleted Successfully
        successResponseForCreatingDomain:
            title: Response for creating a domain
            description: Example success response for creating a domain
            required:
                - type
            type: object
            properties:
                type:
                    description: |
                        URN type of the response indicating if the query was successful or if any errors have
                        been triggered.
                    type: string
                title:
                    description: A human readable title to the message response.
                results:
                    description: Results which matched the query. This is an array of objects.
                    type: array
                    items:
                        type: object
            example:
                type: urn:dx:cat:Success
                title: Success
                results:
                    - id: 3d73067f-2855-4155-b918-14d621b7a576
                      detail: domain Created Successfully
        successResponseForUpdatingDomain:
            title: Response for updating a domain
            description: Example success response for updating a domain
            required:
                - type
            type: object
            properties:
                type:
                    description: |
                        URN type of the response indicating if the query was successful or if any errors have
                        been triggered.
                    type: string
                title:
                    description: A human readable title to the message response.
                results:
                    description: Results which matched the query. This is an array of objects.
                    type: array
                    items:
                        type: object
            example:
                type: urn:dx:cat:Success
                title: Success
                results:
                    - id: 3d73067f-2855-4155-b918-14d621b7a576
                      detail: Domain Updated Successfully
        successResponseForGettingDomain:
            title: Response for getting a domain
            description: Example success response for getting a domain
            required:
                - type
            type: object
            properties:
                type:
                    description: |
                        URN type of the response indicating if the query was successful or if any errors have
                        been triggered.
                    type: string
                title:
                    description: A human readable title to the message response.
                totalHits:
                    format: int32
                    description: Total number of documents which matched the query.
                    type: integer
                results:
                    description: Results which matched the query. This is an array of objects.
                    type: array
                    items:
                        type: object
            example:
                type: urn:dx:cat:Success
                title: Success
                totalHits: 2
                results:
                    - icon: https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/icons/environment.png
                      name: environment
                      description: Data Models that pertain to environment domain
                      label: Environment
                      domainId: 143db678-0816-4bb5-999d-b62ac0ca1b4b
                    - icon: https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/icons/civic.jpeg
                      name: civic
                      description: Data Models that pertain to civic domain
                      label: Civic
                      domainId: 3d73067f-2855-4155-b918-14d621b7a576
        successResponseForDeletingDomain:
            title: Response for deleting a domain
            description: Example success response for deleting a domain
            required:
                - type
            type: object
            properties:
                type:
                    description: |
                        URN type of the response indicating if the query was successful or if any errors have
                        been triggered.
                    type: string
                title:
                    description: A human readable title to the message response.
                results:
                    description: Results which matched the query. This is an array of objects.
                    type: array
                    items:
                        type: object
            example:
                type: urn:dx:cat:Success
                title: Success
                results:
                    - id: 3d73067f-2855-4155-b918-14d621b7a576
                      detail: Domain deleted Successfully
        errorResponseForCreatingInstance:
            title: Example Response for creating or updating an instance or a domain or a geoquery
            description: Invalid or missing payload field in the given request
            required:
                - type
            type: object
            properties:
                type:
                    description: |
                        Indicates Invalid or missing payload field in the given request
                    type: string
                title:
                    description: A human readable title to the message response
            example:
                type: urn:dx:cat:InvalidSchema
                title: Invalid Schema
                detail: The Schema of requested body is invalid.
        exampleDomain:
            title: Root Type for exampleDomain
            description: An example domain object of middle layer.
            type: object
            properties:
                description:
                    type: string
                    description: Description about the domain
                icon:
                    type: string
                    description: URL of the image
                label:
                    type: string
                    description: type or tag of the domain
                name:
                    type: string
                    description: Domain name
            example:
                description: Data Models that pertain to civic domain
                icon: 'https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/icons/civic.png'
                label: Civic
                name: civic
                
tags:
    -
        name: Entity
        description: |
            Manage catalogue entities and perform Create/Update/Read/Delete operations on them.
            These apis are intended to be used by DX(Data Exchange) Data *Providers*.
        x-displayName: Entity
    -
        name: Mlayer Instance
        description: >
            Catalogue middle layer specific APIs. 
            Instance refers to the name of the city/location.
        x-displayName: Mlayer Instance
    -
        name: Mlayer Domain
        description: >
            Catalogue middle layer specific APIs. 
            Catalogue has data-domain models that describes each of the domains.
        x-displayName: Mlayer Domain